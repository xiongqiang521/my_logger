<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.logest.mapper.UserDao">
  <resultMap id="BaseResultMap" type="com.xq.logest.bean.UserDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="TINYINT" property="username" />
    <result column="password" jdbcType="TIMESTAMP" property="password" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `username`, `password`
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xq.logest.bean.UserDTO" useGeneratedKeys="true">
    insert into user (`level`, `time`, `method`,
      `type`, params, `user`,
      is_exception, `exception`)
    values (#{level,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{method,jdbcType=VARCHAR},
      #{type,jdbcType=TINYINT}, #{params,jdbcType=VARCHAR}, #{user,jdbcType=INTEGER},
      #{isException,jdbcType=TINYINT}, #{exception,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xq.logest.bean.UserDTO" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="level != null">
        `level`,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="method != null">
        `method`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="user != null">
        `user`,
      </if>
      <if test="isException != null">
        is_exception,
      </if>
      <if test="exception != null">
        `exception`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=INTEGER},
      </if>
      <if test="isException != null">
        #{isException,jdbcType=TINYINT},
      </if>
      <if test="exception != null">
        #{exception,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.logest.bean.UserDTO">
    update user
    <set>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="method != null">
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        `user` = #{user,jdbcType=INTEGER},
      </if>
      <if test="isException != null">
        is_exception = #{isException,jdbcType=TINYINT},
      </if>
      <if test="exception != null">
        `exception` = #{exception,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.logest.bean.UserDTO">
    update user
    set `level` = #{level,jdbcType=INTEGER},
      `time` = #{time,jdbcType=TIMESTAMP},
      `method` = #{method,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      params = #{params,jdbcType=VARCHAR},
      `user` = #{user,jdbcType=INTEGER},
      is_exception = #{isException,jdbcType=TINYINT},
      `exception` = #{exception,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
